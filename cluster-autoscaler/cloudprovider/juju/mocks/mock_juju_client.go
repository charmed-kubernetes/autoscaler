// Code generated by MockGen. DO NOT EDIT.
// Source: k8s.io/autoscaler/cluster-autoscaler/cloudprovider/juju (interfaces: JujuClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	application "github.com/juju/juju/api/client/application"
	params "github.com/juju/juju/rpc/params"
)

// MockJujuClient is a mock of JujuClient interface.
type MockJujuClient struct {
	ctrl     *gomock.Controller
	recorder *MockJujuClientMockRecorder
}

// MockJujuClientMockRecorder is the mock recorder for MockJujuClient.
type MockJujuClientMockRecorder struct {
	mock *MockJujuClient
}

// NewMockJujuClient creates a new mock instance.
func NewMockJujuClient(ctrl *gomock.Controller) *MockJujuClient {
	mock := &MockJujuClient{ctrl: ctrl}
	mock.recorder = &MockJujuClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJujuClient) EXPECT() *MockJujuClientMockRecorder {
	return m.recorder
}

// AddUnits mocks base method.
func (m *MockJujuClient) AddUnits(arg0 application.AddUnitsParams) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddUnits", arg0)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddUnits indicates an expected call of AddUnits.
func (mr *MockJujuClientMockRecorder) AddUnits(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddUnits", reflect.TypeOf((*MockJujuClient)(nil).AddUnits), arg0)
}

// DestroyUnits mocks base method.
func (m *MockJujuClient) DestroyUnits(arg0 application.DestroyUnitsParams) ([]params.DestroyUnitResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DestroyUnits", arg0)
	ret0, _ := ret[0].([]params.DestroyUnitResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DestroyUnits indicates an expected call of DestroyUnits.
func (mr *MockJujuClientMockRecorder) DestroyUnits(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DestroyUnits", reflect.TypeOf((*MockJujuClient)(nil).DestroyUnits), arg0)
}

// Status mocks base method.
func (m *MockJujuClient) Status(arg0 []string) (*params.FullStatus, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Status", arg0)
	ret0, _ := ret[0].(*params.FullStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Status indicates an expected call of Status.
func (mr *MockJujuClientMockRecorder) Status(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Status", reflect.TypeOf((*MockJujuClient)(nil).Status), arg0)
}
